; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[env:generic_stm32f103c]

platform = ststm32
framework = arduino
board_build.core = maple
board = genericSTM32F103C8
board_build.mcu = stm32f103c8t6

; ensure MCU frequency is set to 72MHz, for the LCD, and the serial port
board_build.f_cpu = 72000000L

lib_deps = 
	https://github.com/dreamcat4/HT1621
	siruli/MAX6675@^2.1.0
	br3ttb/PID@^1.2.1

; ; build flags for maple
; build_flags =
			; -D ENABLE_USB_SERIAL
      ; -D ENABLE_USB_MASS_STORAGE

; serial monitor configuration
monitor_port = /dev/ttyACM0
monitor_speed = 115200
; monitor_rts = 1
; monitor_dtr = 1

monitor_filters = default, colorize, printable
; monitor_filters = default, colorize, log2file, printable, time, send_on_enter, esp32_exception_decoder, esp8266_exception_decoder
; monitor_filters =
	; default - Remove typical terminal control codes from input
	; colorize - Apply different colors for received and echo
	; debug - Print what is sent and received
	; direct - Do-nothing: forward all data unchanged
	; hexlify - Show a hexadecimal representation of the data (code point of each character)
	; log2file - Log data to a file “platformio-device-monitor-%date%.log” located in the current working directory
	; nocontrol - Remove all control codes, incl. CR+LF
	; printable - Show decimal code for all non-ASCII characters and replace most control codes
	; time - Add timestamp with milliseconds for each new line
	; send_on_enter - Send a text to device on ENTER

; monitor_flags=
;     --parity
;     N
;     --encoding
;     UTF-8



; to configure DFU mode flashing:
; ===================================================================================================
; linux: dfu mode requires the following udev rule added
; /etc/udev/rules.d/99-weact-f411ce.rules:
; SUBSYSTEMS=="usb", ATTRS{idVendor}=="0483", ATTRS{idProduct}=="df11", GROUP="plugdev", MODE="660"

; otherwise you will see 
; [251456.436672] usb 1-2: device not accepting address 95, error -71
; Device not responding to setup address.

; to enter dfu mode:
; ============================================
; hold boot0 button during boot or reset




upload_protocol = stlink
; upload_protocol = jlink
; upload_protocol = tumpa
; upload_protocol = serial

debug_tool = stlink
; debug_tool = jlink
; debug_tool = tumpa

; debug_port = <CONFIGURE GDB PORT>
; upload_port = <THE SAME AS DEBUG PORT>

; upload_speed = 
; upload_resetmethod = 

; platformio-ide.reopenSerialMonitorDelay
; reopenSerialMonitorDelay = 5;



; ; custom settings for TIAO Tumpa v2 programmer (SWD protocol)
; ; ===========================================================
; upload_protocol = custom
; upload_flags =
;     -s
;     $PROJECT_PACKAGES_DIR/tool-openocd/scripts
;     -f
;     interface/ftdi/tumpa.cfg
;     -f
;     interface/ftdi/swd-resistor-hack.cfg
;     -f
;     target/stm32f1x.cfg
    
; upload_command =
; 		$PROJECT_PACKAGES_DIR/tool-openocd/bin/openocd $UPLOAD_FLAGS -c "init; reset halt; wait_halt 50000; halt" -c "program {$SOURCE} 0x08000000 verify; shutdown;"

; ; test debug command, open a terminal
; ; pio debug --interface=gdb

; ; pio debugging options
; ; https://docs.platformio.org/en/latest/projectconf/section_env_debug.htm

; debug_tool = custom
; debug_port = localhost:3333
; debug_load_cmds = load

; ; debug_build_flags = -O0 -ggdb3 -g3
; ; debug_build_flags = -ggdb3 -g3
; ; debug_build_flags = -ggdb3
; ; debug_build_flags = -v

; ; debug_init_break = tbreak main
; ; debug_init_break = tbreak setup
; ; debug_init_break = tbreak loop
; debug_init_break = info target ; skip the default breakpoint, does nothing

; ; default is already ok
; ; debug_svd_path = $HOME/.platformio/platforms/ststm32/misc/svd/STM32F103xx.svd

; ; NOT RECOGNIZED
; ; debug_server_ready_pattern = Waiting for GDB connection
; ; debug_server_ready_pattern = ^.*Listening on port \d+ for gdb connections

; ; ! works, break after startup
; debug_init_cmds =
;   target extended-remote $DEBUG_PORT
;   $INIT_BREAK
;   monitor halt
;   load
;   monitor init

; ; ! works too, ignore debug_init_break = , and dont resume after startup
; ; debug_init_cmds =
; ;   target extended-remote $DEBUG_PORT
; ;   monitor halt
; ;   load
; ;   monitor init
; ;   ; monitor resume

; ; debug_server =
; ; 		$PROJECT_PACKAGES_DIR/tool-openocd/bin/openocd
; ; 		$UPLOAD_FLAGS
; ; 		-c
; ; 		reset_config srst_only connect_assert_srst

; debug_server =
; 		openocd
;     -s
;     tcl
;     -f
;     interface/ftdi/tumpa.cfg
;     -f
;     interface/ftdi/swd-resistor-hack.cfg
;     -c
;     transport select swd
;     -f
;     target/stm32f1x.cfg
; 		-c
; 		reset_config srst_only connect_assert_srst


